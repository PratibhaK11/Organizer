{"ast":null,"code":"var _jsxFileName = \"/home/pratibha/Pictures/Organizer/organizer-app/src/context/AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const res = await axios.get('/api/users/current', {\n          withCredentials: true // Ensure credentials are sent with request\n        });\n        setUser(res.data.user);\n      } catch (err) {\n        console.error('Auth check error:', err.response ? err.response.data : err.message); // Log error details\n        setUser(null);\n      }\n    };\n    checkAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const res = await axios.post('/api/users/login', {\n        email,\n        password\n      }, {\n        withCredentials: true // Ensure credentials are sent with request\n      });\n      setUser(res.data.user);\n    } catch (err) {\n      console.error('Login error:', err.response ? err.response.data : err.message); // Log error details\n      throw err;\n    }\n  };\n  const register = async (name, email, password, password2) => {\n    try {\n      await axios.post('/api/users/register', {\n        name,\n        email,\n        password,\n        password2\n      }, {\n        withCredentials: true // Ensure credentials are sent with request\n      });\n    } catch (err) {\n      console.error('Register error:', err.response ? err.response.data : err.message); // Log error details\n      throw err;\n    }\n  };\n  const logout = async () => {\n    try {\n      // Call unsubscribeUser before logging out\n      await unsubscribeUser();\n      await axios.get('/api/users/logout', {\n        withCredentials: true // Ensure credentials are sent with request\n      });\n      setUser(null);\n    } catch (err) {\n      console.error('Logout error:', err.response ? err.response.data : err.message); // Log error details\n      throw err;\n    }\n  };\n  const unsubscribeUser = async () => {\n    if ('serviceWorker' in navigator && 'PushManager' in window) {\n      try {\n        const registration = await navigator.serviceWorker.ready;\n        const subscription = await registration.pushManager.getSubscription();\n        if (subscription) {\n          await subscription.unsubscribe();\n\n          // Notify server to remove subscription\n          await axios.post('/api/notifications/unsubscribe', {\n            endpoint: subscription.endpoint\n          }, {\n            withCredentials: true\n          });\n        }\n      } catch (error) {\n        console.error('Error unsubscribing from push notifications:', error);\n      }\n    } else {\n      console.warn('Push notifications or service worker are not supported in this browser.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","checkAuth","res","get","withCredentials","data","err","console","error","response","message","login","email","password","post","register","name","password2","logout","unsubscribeUser","navigator","window","registration","serviceWorker","ready","subscription","pushManager","getSubscription","unsubscribe","endpoint","warn","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/pratibha/Pictures/Organizer/organizer-app/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AuthContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const res = await axios.get('/api/users/current', {\n          withCredentials: true // Ensure credentials are sent with request\n        });\n        setUser(res.data.user);\n      } catch (err) {\n        console.error('Auth check error:', err.response ? err.response.data : err.message); // Log error details\n        setUser(null);\n      }\n    };\n    checkAuth();\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const res = await axios.post('/api/users/login', { email, password }, {\n        withCredentials: true // Ensure credentials are sent with request\n      });\n      setUser(res.data.user);\n    } catch (err) {\n      console.error('Login error:', err.response ? err.response.data : err.message); // Log error details\n      throw err;\n    }\n  };\n\n  const register = async (name, email, password, password2) => {\n    try {\n      await axios.post('/api/users/register', { name, email, password, password2 }, {\n        withCredentials: true // Ensure credentials are sent with request\n      });\n    } catch (err) {\n      console.error('Register error:', err.response ? err.response.data : err.message); // Log error details\n      throw err;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      // Call unsubscribeUser before logging out\n      await unsubscribeUser();\n      \n      await axios.get('/api/users/logout', {\n        withCredentials: true // Ensure credentials are sent with request\n      });\n      setUser(null);\n    } catch (err) {\n      console.error('Logout error:', err.response ? err.response.data : err.message); // Log error details\n      throw err;\n    }\n  };\n\n  const unsubscribeUser = async () => {\n    if ('serviceWorker' in navigator && 'PushManager' in window) {\n      try {\n        const registration = await navigator.serviceWorker.ready;\n        const subscription = await registration.pushManager.getSubscription();\n        \n        if (subscription) {\n          await subscription.unsubscribe();\n\n          // Notify server to remove subscription\n          await axios.post('/api/notifications/unsubscribe', {\n            endpoint: subscription.endpoint\n          }, {\n            withCredentials: true\n          });\n        }\n      } catch (error) {\n        console.error('Error unsubscribing from push notifications:', error);\n      }\n    } else {\n      console.warn('Push notifications or service worker are not supported in this browser.');\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, register, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport { AuthContext, AuthProvider };\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,oBAAoB,EAAE;UAChDC,eAAe,EAAE,IAAI,CAAC;QACxB,CAAC,CAAC;QACFJ,OAAO,CAACE,GAAG,CAACG,IAAI,CAACN,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOO,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,mBAAmB,EAAEF,GAAG,CAACG,QAAQ,GAAGH,GAAG,CAACG,QAAQ,CAACJ,IAAI,GAAGC,GAAG,CAACI,OAAO,CAAC,CAAC,CAAC;QACpFV,OAAO,CAAC,IAAI,CAAC;MACf;IACF,CAAC;IACDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF,MAAMX,GAAG,GAAG,MAAMV,KAAK,CAACsB,IAAI,CAAC,kBAAkB,EAAE;QAAEF,KAAK;QAAEC;MAAS,CAAC,EAAE;QACpET,eAAe,EAAE,IAAI,CAAC;MACxB,CAAC,CAAC;MACFJ,OAAO,CAACE,GAAG,CAACG,IAAI,CAACN,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEF,GAAG,CAACG,QAAQ,GAAGH,GAAG,CAACG,QAAQ,CAACJ,IAAI,GAAGC,GAAG,CAACI,OAAO,CAAC,CAAC,CAAC;MAC/E,MAAMJ,GAAG;IACX;EACF,CAAC;EAED,MAAMS,QAAQ,GAAG,MAAAA,CAAOC,IAAI,EAAEJ,KAAK,EAAEC,QAAQ,EAAEI,SAAS,KAAK;IAC3D,IAAI;MACF,MAAMzB,KAAK,CAACsB,IAAI,CAAC,qBAAqB,EAAE;QAAEE,IAAI;QAAEJ,KAAK;QAAEC,QAAQ;QAAEI;MAAU,CAAC,EAAE;QAC5Eb,eAAe,EAAE,IAAI,CAAC;MACxB,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,iBAAiB,EAAEF,GAAG,CAACG,QAAQ,GAAGH,GAAG,CAACG,QAAQ,CAACJ,IAAI,GAAGC,GAAG,CAACI,OAAO,CAAC,CAAC,CAAC;MAClF,MAAMJ,GAAG;IACX;EACF,CAAC;EAED,MAAMY,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF;MACA,MAAMC,eAAe,CAAC,CAAC;MAEvB,MAAM3B,KAAK,CAACW,GAAG,CAAC,mBAAmB,EAAE;QACnCC,eAAe,EAAE,IAAI,CAAC;MACxB,CAAC,CAAC;MACFJ,OAAO,CAAC,IAAI,CAAC;IACf,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEF,GAAG,CAACG,QAAQ,GAAGH,GAAG,CAACG,QAAQ,CAACJ,IAAI,GAAGC,GAAG,CAACI,OAAO,CAAC,CAAC,CAAC;MAChF,MAAMJ,GAAG;IACX;EACF,CAAC;EAED,MAAMa,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,eAAe,IAAIC,SAAS,IAAI,aAAa,IAAIC,MAAM,EAAE;MAC3D,IAAI;QACF,MAAMC,YAAY,GAAG,MAAMF,SAAS,CAACG,aAAa,CAACC,KAAK;QACxD,MAAMC,YAAY,GAAG,MAAMH,YAAY,CAACI,WAAW,CAACC,eAAe,CAAC,CAAC;QAErE,IAAIF,YAAY,EAAE;UAChB,MAAMA,YAAY,CAACG,WAAW,CAAC,CAAC;;UAEhC;UACA,MAAMpC,KAAK,CAACsB,IAAI,CAAC,gCAAgC,EAAE;YACjDe,QAAQ,EAAEJ,YAAY,CAACI;UACzB,CAAC,EAAE;YACDzB,eAAe,EAAE;UACnB,CAAC,CAAC;QACJ;MACF,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;MACtE;IACF,CAAC,MAAM;MACLD,OAAO,CAACuB,IAAI,CAAC,yEAAyE,CAAC;IACzF;EACF,CAAC;EAED,oBACEpC,OAAA,CAACC,WAAW,CAACoC,QAAQ;IAACC,KAAK,EAAE;MAAEjC,IAAI;MAAEY,KAAK;MAAEI,QAAQ;MAAEG;IAAO,CAAE;IAAArB,QAAA,EAC5DA;EAAQ;IAAAoC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACtC,EAAA,CArFIF,YAAY;AAAAyC,EAAA,GAAZzC,YAAY;AAuFlB,SAASD,WAAW,EAAEC,YAAY;AAAG,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}